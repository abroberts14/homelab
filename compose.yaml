# networks:
#   coolify:
#     name: app_network
#     driver: bridge

networks:
  coolify:
    external: true


  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    network_mode: "service:gluetun"

    cap_add:
      - NET_ADMIN
    environment:
      - PUID
      - PGID
      - TZ
      - URL
      - SUBDOMAINS
      - VALIDATION
      - DNSPLUGIN
      - CERTPROVIDER
      - SWAG_AUTORELOAD
      - DUCKDNSTOKEN
      - EMAIL

    volumes:
      - '/docker/appdata/swag:/config'
    restart: unless-stopped
    depends_on:
      - qbittorrent
      - radarr
      - sonarr
      - prowlarr
      - tautulli
      - overseerr
      - channels-dvr
      - grafana
      - prometheus
      - gluetun
  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun
    hostname: gluetun
    networks:
      - coolify  # Uses the same network as Gluetun   
    cap_add:
      - NET_ADMIN
    devices:
      - '/dev/net/tun:/dev/net/tun'
    environment:
      - FIREWALL_INPUT_PORTS
      - FIREWALL_OUTBOUND_SUBNETS
      - VPN_SERVICE_PROVIDER
      - VPN_TYPE
      - WIREGUARD_PRIVATE_KEY
      - SERVER_COUNTRIES
      - TZ
      - DNS
      - DNS_BIND_IP
    ports:
      - '443:443' #swag  
      - '80:80' #swag  
      - '8989:8989' #other
      - '7878:7878' #radarr
      - '9696:9696' #sonarrr
      - '8181:8181'
      - '5055:5055'
      - '6881:6881'
      - '6881:6881/udp'
      - '9090:9090' #grafana
      - '3000:3000' #grafana
    volumes:
      - 'gluetun:/gluetun'

    restart: unless-stopped
  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent

    environment:
      - PUID
      - PGID
      - TZ
      - WEBUI_PORT
    volumes:
      - '/docker/appdata/qbittorrent:/config'
      - '/data/torrents:/data/torrents'
    restart: unless-stopped
    network_mode: "service:gluetun"
    
    depends_on:
      - gluetun
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - '/docker/appdata/tautulli:/config'
    restart: unless-stopped
    network_mode: "service:gluetun"
 
    depends_on:
      - gluetun
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - '/docker/appdata/radarr:/config'
      - '/mnt/network_share/data:/data'
      - '/data/torrents:/data/torrents'
    restart: unless-stopped
    network_mode: "service:gluetun"

    depends_on:
      - gluetun
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - '/docker/appdata/sonarr:/config'
      - '/mnt/network_share/data:/data'
      - '/data/torrents:/data/torrents'
    restart: unless-stopped
    network_mode: "service:gluetun"
 
    depends_on:
      - gluetun
  overseerr:
    image: 'lscr.io/linuxserver/overseerr:latest'
    container_name: overseerr
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - '/docker/appdata/overseerr:/config'
    restart: unless-stopped
    network_mode: "service:gluetun"

    depends_on:
      - gluetun
  prowlarr:
    image: 'lscr.io/linuxserver/prowlarr:latest'
    container_name: prowlarr
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - '/docker/appdata/prowlarr:/config'
    restart: unless-stopped
    network_mode: "service:gluetun"

    depends_on:
      - gluetun
  plex:
    image: 'lscr.io/linuxserver/plex:latest'
    container_name: plex
    environment:
      - PUID
      - PGID
      - TZ
      - VERSION
    volumes:
      - '/docker/appdata/plex:/config'
      - '/mnt/network_share/data/media:/data/media'
    restart: unless-stopped
    network_mode: host
  jellyfin:
    image: 'lscr.io/linuxserver/jellyfin:latest'
    container_name: jellyfin
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - '/docker/appdata/jellyfin:/config'
      - '/mnt/network_share/data/media:/data/media'
    ports:
      - '8096:8096'
      - '8920:8920'
      - '7359:7359/udp'
      - '1900:1900/udp'
    restart: unless-stopped
    network_mode: host
  channels-dvr:
    image: 'fancybits/channels-dvr:tve'
    container_name: channels-dvr
    network_mode: host
    ports:
      - '8089:8089'
    restart: 'on-failure:10'
    devices:
      - '/dev/dri:/dev/dri'
    volumes:
      - '/docker/appdata/dvr:/channels-dvr'
      - '/mnt/network_share/data/dvr/recordings:/shares/DVR'
volumes:
  gluetun: null
  prometheus: null
  grafana: null
